// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// c_test
double c_test(double test);
RcppExport SEXP _optMTP_c_test(SEXP testSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type test(testSEXP);
    rcpp_result_gen = Rcpp::wrap(c_test(test));
    return rcpp_result_gen;
END_RCPP
}
// c_mtp
IntegerVector c_mtp(NumericVector p_values, NumericVector alphas, NumericMatrix mat_g, bool log);
RcppExport SEXP _optMTP_c_mtp(SEXP p_valuesSEXP, SEXP alphasSEXP, SEXP mat_gSEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p_values(p_valuesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat_g(mat_gSEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(c_mtp(p_values, alphas, mat_g, log));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_optMTP_c_test", (DL_FUNC) &_optMTP_c_test, 1},
    {"_optMTP_c_mtp", (DL_FUNC) &_optMTP_c_mtp, 4},
    {NULL, NULL, 0}
};

void my_package_init(DllInfo *dll);
RcppExport void R_init_optMTP(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
    my_package_init(dll);
}
